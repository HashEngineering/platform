# [allow (clippy :: let_and_return , clippy :: suspicious_else_formatting , clippy :: redundant_field_names , dead_code , redundant_semicolons , unused_braces , unused_imports , unused_unsafe , unused_variables , unused_qualifications)] pub mod types { # [doc = "FFI-representation of the get_identity"] # [doc = r" # Safety"] # [no_mangle] pub unsafe extern "C" fn ffi_get_identity () -> * mut dpp :: prelude :: Identity { let obj = crate :: get_identity () ; ferment_interfaces :: FFIConversion :: ffi_to (obj) } } # [allow (clippy :: let_and_return , clippy :: suspicious_else_formatting , clippy :: redundant_field_names , dead_code , redundant_semicolons , unused_braces , unused_imports , unused_unsafe , unused_variables , unused_qualifications)] pub mod generics { }