# [allow (dead_code , redundant_semicolons , unused_braces , unused_imports , unused_unsafe , unused_variables)] pub mod types { use dpp :: fermented :: types :: prelude :: Identity_FFI ; use dpp :: prelude :: Identity ; use crate :: get_identity ; # [doc = "FFI-representation of the get_identity"] # [doc = r" # Safety"] # [no_mangle] pub unsafe extern "C" fn ffi_get_identity () -> * mut Identity_FFI { let obj = get_identity () ; ferment_interfaces :: FFIConversion :: ffi_to (obj) } } # [allow (dead_code , redundant_semicolons , unused_braces , unused_imports , unused_unsafe , unused_variables)] pub mod generics { }